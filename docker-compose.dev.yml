version: "3.8"
services:

    web:
        build:
            context: .
            dockerfile: ./Dockerfile
        container_name: app_my_app
        env_file:
            - ./.env
#        environment:
#            - DJANGO_SETTINGS_MODULE=my_app.settings.dev
        ports:
            - "8000:8000"
#        command: tail -f /dev/null
        command: python3 src/manage.py runserver 0.0.0.0:8000
        volumes:
            - .:/app
        depends_on:
            - db
            - redis
        networks:
            - my_app-network

    db:
        image: postgres:14.2-alpine3.15
        container_name: db_my_app
        restart: always
        env_file:
            - ./.env
        ports:
            - "127.0.0.1:5432:5432"
        volumes:
            - ./data/postgres/data:/var/lib/postgresql/data
        networks:
            - my_app-network

    worker:
        restart: always
        build:
            context: .
            dockerfile: ./Dockerfile
        container_name: my_app_worker
        command: ['celery', '--app', 'my_app', '--workdir=./src', 'worker', '--loglevel', 'INFO']
#        environment:
#            - DJANGO_SETTINGS_MODULE=my_app.settings.dev
        env_file:
            - ./.env
        volumes:
            - .:/app
        depends_on:
          - db
          - redis
          - web
        networks:
            - my_app-network

    redis:
        image: redis:alpine
        container_name: redis
        networks:
            - my_app-network

    flower:
        build:
            context: .
            dockerfile: ./Dockerfile
#        image: mher/flower:0.9.5
#        command: ['flower', '--broker=redis://redis:6379', '--port=5555']
        command: ['celery', '--app', 'my_app', '--workdir=./src', 'flower', '--port=5555']
        ports:
            - "5555:5555"
        expose:
          - 5555
        depends_on:
          - redis
        networks:
            - my_app-network

networks:
    my_app-network:
        driver: bridge
